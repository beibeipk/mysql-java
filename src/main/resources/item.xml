<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thoughtworks.learning.core.ItemsRepository" >

    <resultMap id="ItemsInfoMapper" type="ItemsInfo">
        <id property="barcode" column="barcode" />
        <result property="name" column="name" />
        <result property="unit" column="unit" />
        <result property="price" column="price" />
        <result property="count" column="count" />
        <result property="total" column="total" />
    </resultMap>

    <resultMap id="CaculateMapper" type="Double">
        <result column="total" />
    </resultMap>

    <select id="findInputsInfo" resultMap="ItemsInfoMapper">
        select Items.*,
        Items.price*Items.count as total
        from (
          select Allitems.*,
          count(inputs.barcode) as count from Allitems, inputs
          where Allitems.barcode=inputs.barcode
          group by inputs.barcode)Items;
    </select>

    <select id="findGiftInfo" resultMap="ItemsInfoMapper">
        select PromotionsItems.*,
        floor(PromotionsItems.count/3) as giftCount,
        PromotionsItems.price*floor(PromotionsItems.count/3) as total
        from promotions,
        (select Allitems.*,
        count(inputs.barcode) as count from Allitems, inputs
        where Allitems.barcode=inputs.barcode
        group by inputs.barcode)PromotionsItems
        where PromotionsItems.barcode=promotions.barcode
        and PromotionsItems.count>=3
    </select>

    <select id="caculateInputs" resultMap="CaculateMapper">
        select Sum(Items.price*Items.count) as total
        from (
          select Allitems.*,
          count(inputs.barcode) as count from Allitems, inputs
          where Allitems.barcode=inputs.barcode
          group by inputs.barcode)Items;
    </select>

    <select id="caculateGifts" resultMap="CaculateMapper">
        select Sum(PromotionsItems.price*floor(PromotionsItems.count/3)) as total
        from promotions,
        (select Allitems.*,
        count(inputs.barcode) as count from Allitems, inputs
        where Allitems.barcode=inputs.barcode
        group by inputs.barcode)PromotionsItems
        where PromotionsItems.barcode=promotions.barcode
        and PromotionsItems.count>=3
    </select>

    <insert id="createInputsBarcode">
        insert into inputs(barcode) values(#{inputs});
    </insert>

</mapper>